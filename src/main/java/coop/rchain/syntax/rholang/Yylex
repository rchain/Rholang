// This JLex file was machine-generated by the BNF converter
package coop.rchain.syntax.rholang;

import java_cup.runtime.*;
%%
%cup
%unicode
%line
%public
%{
  String pstring = new String();
  public int line_num() { return (yyline+1); }
  public String buff() {return new String(yy_buffer,yy_buffer_index,10).trim();}
%}
LETTER = ({CAPITAL}|{SMALL})
CAPITAL = [A-Z\xC0-\xD6\xD8-\xDE]
SMALL = [a-z\xDF-\xF6\xF8-\xFF]
DIGIT = [0-9]
IDENT = ({LETTER}|{DIGIT}|['_])
%state COMMENT
%state CHAR
%state CHARESC
%state CHAREND
%state STRING
%state ESCAPED
%%
<YYINITIAL>\( { return new Symbol(sym._SYMB_0); }
<YYINITIAL>\) { return new Symbol(sym._SYMB_1); }
<YYINITIAL>= { return new Symbol(sym._SYMB_2); }
<YYINITIAL>\{ { return new Symbol(sym._SYMB_3); }
<YYINITIAL>\} { return new Symbol(sym._SYMB_4); }
<YYINITIAL>\* { return new Symbol(sym._SYMB_5); }
<YYINITIAL># { return new Symbol(sym._SYMB_6); }
<YYINITIAL>! { return new Symbol(sym._SYMB_7); }
<YYINITIAL>/: { return new Symbol(sym._SYMB_8); }
<YYINITIAL>:\\ { return new Symbol(sym._SYMB_9); }
<YYINITIAL>\| { return new Symbol(sym._SYMB_10); }
<YYINITIAL>, { return new Symbol(sym._SYMB_11); }
<YYINITIAL>@ { return new Symbol(sym._SYMB_12); }
<YYINITIAL><- { return new Symbol(sym._SYMB_13); }
<YYINITIAL>; { return new Symbol(sym._SYMB_14); }
<YYINITIAL>=> { return new Symbol(sym._SYMB_15); }
<YYINITIAL>< { return new Symbol(sym._SYMB_16); }
<YYINITIAL>> { return new Symbol(sym._SYMB_17); }
<YYINITIAL>_ { return new Symbol(sym._SYMB_18); }
<YYINITIAL>Nil { return new Symbol(sym._SYMB_19); }
<YYINITIAL>case { return new Symbol(sym._SYMB_20); }
<YYINITIAL>contract { return new Symbol(sym._SYMB_21); }
<YYINITIAL>false { return new Symbol(sym._SYMB_22); }
<YYINITIAL>for { return new Symbol(sym._SYMB_23); }
<YYINITIAL>if { return new Symbol(sym._SYMB_24); }
<YYINITIAL>in { return new Symbol(sym._SYMB_25); }
<YYINITIAL>match { return new Symbol(sym._SYMB_26); }
<YYINITIAL>new { return new Symbol(sym._SYMB_27); }
<YYINITIAL>select { return new Symbol(sym._SYMB_28); }
<YYINITIAL>sum { return new Symbol(sym._SYMB_29); }
<YYINITIAL>total { return new Symbol(sym._SYMB_30); }
<YYINITIAL>true { return new Symbol(sym._SYMB_31); }
<YYINITIAL>with { return new Symbol(sym._SYMB_32); }

<YYINITIAL>{CAPITAL}({LETTER}|{DIGIT}|_|')* { return new Symbol(sym.Name, yytext().intern()); }
<YYINITIAL>{SMALL}({LETTER}|{DIGIT}|_|')* { return new Symbol(sym.Var, yytext().intern()); }
<YYINITIAL>"\"" { yybegin(STRING); }
<STRING>\\ { yybegin(ESCAPED); }
<STRING>\" { String foo = pstring; pstring = new String(); yybegin(YYINITIAL); return new Symbol(sym._STRING_, foo.intern()); }
<STRING>.  { pstring += yytext(); }
<ESCAPED>n { pstring +=  "\n"; yybegin(STRING); }
<ESCAPED>\" { pstring += "\""; yybegin(STRING); }
<ESCAPED>\\ { pstring += "\\"; yybegin(STRING); }
<ESCAPED>t  { pstring += "\t"; yybegin(STRING); }
<ESCAPED>.  { pstring += yytext(); yybegin(STRING); }
<YYINITIAL>"'" { yybegin(CHAR); }
<CHAR>\\ { yybegin(CHARESC); }
<CHAR>[^'] { yybegin(CHAREND); return new Symbol(sym._CHAR_, new Character(yytext().charAt(0))); }
<CHARESC>n { yybegin(CHAREND); return new Symbol(sym._CHAR_, new Character('\n')); }
<CHARESC>t { yybegin(CHAREND); return new Symbol(sym._CHAR_, new Character('\t')); }
<CHARESC>. { yybegin(CHAREND); return new Symbol(sym._CHAR_, new Character(yytext().charAt(0))); }
<CHAREND>"'" {yybegin(YYINITIAL);}
<YYINITIAL>{DIGIT}+"."{DIGIT}+("e"(\-)?{DIGIT}+)? { return new Symbol(sym._DOUBLE_, new Double(yytext())); }
<YYINITIAL>{DIGIT}+ { return new Symbol(sym._INTEGER_, new Integer(yytext())); }

<YYINITIAL>[ \t\r\n\f] { /* ignore white space. */ }